/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package password_manager;

import java.awt.Color;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sunnyladdy
 */
public class securenotes extends javax.swing.JInternalFrame implements mydbvariables {

    /**
     * Creates new form securenotes
     */
    public static boolean flag=false,securitypass=false;
    public static boolean useraccount = false;
    public static String idnumber;
    public static boolean click = false;
    public securenotes() {
        initComponents();
        title.setCaretPosition(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showingDetailss = new javax.swing.JPanel();
        title = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        serialno = new javax.swing.JTextField();
        notename = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        note = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        passwordprotected = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        Delete_btn = new javax.swing.JButton();
        ok = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setClosable(true);
        getContentPane().setLayout(null);

        showingDetailss.setBackground(new java.awt.Color(255, 255, 255));
        showingDetailss.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                showingDetailssMouseMoved(evt);
            }
        });
        showingDetailss.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showingDetailssMouseEntered(evt);
            }
        });
        showingDetailss.setLayout(null);

        title.setForeground(new java.awt.Color(204, 204, 204));
        title.setText("Enter Title For Your Note Here");
        title.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                titleMouseClicked(evt);
            }
        });
        title.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                titleKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                titleKeyReleased(evt);
            }
        });
        showingDetailss.add(title);
        title.setBounds(10, 30, 260, 40);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/password_manager/images/images (2).jpg"))); // NOI18N
        showingDetailss.add(jLabel18);
        jLabel18.setBounds(0, 0, 300, 100);

        jLabel19.setText("sno");
        showingDetailss.add(jLabel19);
        jLabel19.setBounds(120, 102, 50, 25);
        showingDetailss.add(serialno);
        serialno.setBounds(172, 102, 80, 25);

        notename.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        showingDetailss.add(notename);
        notename.setBounds(10, 130, 260, 30);

        note.setColumns(20);
        note.setRows(5);
        jScrollPane1.setViewportView(note);

        showingDetailss.add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 260, 310);
        showingDetailss.add(jLabel1);
        jLabel1.setBounds(10, 140, 0, 0);

        passwordprotected.setText("Password Protected");
        showingDetailss.add(passwordprotected);
        passwordprotected.setBounds(10, 480, 260, 20);

        getContentPane().add(showingDetailss);
        showingDetailss.setBounds(0, 0, 290, 510);

        jPanel2.setBackground(new java.awt.Color(245, 245, 245));

        Delete_btn.setText("Delete");
        Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_btnActionPerformed(evt);
            }
        });

        ok.setText("Update");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        jButton5.setText("Cancel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Delete_btn)
                .addGap(18, 18, 18)
                .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(Delete_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 510, 290, 50);

        setBounds(0, 0, 292, 590);
    }// </editor-fold>//GEN-END:initComponents

    private void showingDetailssMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showingDetailssMouseMoved

    }//GEN-LAST:event_showingDetailssMouseMoved

    private void showingDetailssMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showingDetailssMouseEntered

    }//GEN-LAST:event_showingDetailssMouseEntered

    private void Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_btnActionPerformed
        if(!serialno.getText().isEmpty())
        {
            try
            {
                Connection myconnection = DriverManager.getConnection(PATH+PLACE,USERNAME,PASSWORD);
                try
                {
                    String query = "DELETE FROM `securenotes` WHERE sno=?";
                    PreparedStatement mystatement = myconnection.prepareStatement(query);
                    mystatement.setString(1, serialno.getText());
                    if(mystatement.executeUpdate()>0)
                    {
                        JOptionPane.showMessageDialog(this, "Deleted Successfully..");
                        dashlane.securenotesbox.doClick();
                        this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, "There is an Error in Deleting the Details Successfully..");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(this, "Error Due to : "+e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, "Error Due to : "+e.getMessage());
            }
            securitypass = false;
            flag = false;
        }
        else
        {
            this.dispose();
            securitypass = false;
            flag = false;
        }
    }//GEN-LAST:event_Delete_btnActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
            try
            {
                Connection myconnection = DriverManager.getConnection(PATH+PLACE, USERNAME, PASSWORD);
                try
                {
                    String query;
                    PreparedStatement obj; 
                    if(click == true)
                    {
                        query ="UPDATE `securenotes` SET `note`=?,`type`=?,`title`=?,`passwordprotected`=? WHERE sno=?";
                        obj = myconnection.prepareStatement(query);
                        obj.setString(1,note.getText());
                        obj.setString(2,notename.getText());
                        obj.setString(3,title.getText());
                        if(!passwordprotected.isSelected())
                        {
                            obj.setString(4,"false");
                        }
                        else
                        {
                            obj.setString(4,"true");
                        }
                        obj.setString(5,serialno.getText());
                    }
                    else
                    {
                        query = "INSERT INTO `securenotes`(`id`, `note`, `type`, `title`, `passwordprotected`) VALUES (?,?,?,?,?)";
                        obj = myconnection.prepareStatement(query);
                        obj.setString(1,idnumber);
                        obj.setString(2,note.getText());
                        obj.setString(3,notename.getText());
                        obj.setString(4,title.getText());
                        if(!passwordprotected.isSelected())
                        {
                            obj.setString(5,"false");
                        }
                        else
                        {
                            obj.setString(5,"true");
                        }
                    }
                    if(obj.executeUpdate()>0)
                    {
                        JOptionPane.showMessageDialog(this,"Note Saved Successfully..");
                        dashlane.securenotesbox.doClick();
                        this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this,"Error in Saving the Note..");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Error Due to : "+e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Error Due to : "+e.getMessage());
            }
            securitypass = false;
            flag = false;
    }//GEN-LAST:event_okActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
        dashlane.securitypass = false;
        securitypass = false;
        flag = false;
    }//GEN-LAST:event_jButton5ActionPerformed

    private void titleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleKeyPressed
        if(title.getForeground()!=Color.BLACK)
        {
            if(title.getText().equals("Enter Title For Your Note Here"))
            {
                title.setText("");
            }
        }
        title.setForeground(Color.BLACK);
    }//GEN-LAST:event_titleKeyPressed

    private void titleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titleKeyReleased
        if(title.getText().isEmpty())
        {
            title.setText("Enter Title For Your Note Here");
            title.setCaretPosition(0);
            title.setForeground(new java.awt.Color(204, 204, 204));
        }
    }//GEN-LAST:event_titleKeyReleased

    private void titleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_titleMouseClicked
        if(title.getForeground()!=Color.BLACK)
        {
            if(title.getText().equals("Enter Title For Your Note Here"))
            {
                title.setCaretPosition(0);
            }
        }
    }//GEN-LAST:event_titleMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton Delete_btn;
    public static javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    public static javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea note;
    public static javax.swing.JLabel notename;
    public static javax.swing.JButton ok;
    public static javax.swing.JCheckBox passwordprotected;
    public static javax.swing.JTextField serialno;
    public static javax.swing.JPanel showingDetailss;
    public static javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}
